package main

//#cgo CFLAGS:  -I E:/jaguar/sandbox/C++/ufxapi/ufxapi
//#include "response.h"
import "C"
import "fmt"
import "unsafe"
import "reflect"
//export GoCallBackFunc
func GoCallBackFunc(retptr unsafe.Pointer) {

	ret := (*C.struct_Result)(retptr)
	funcNo := int(ret.FuncNo)
	inputs := make([]reflect.Value, 1)
	inputs[0] = reflect.ValueOf(ret)

	if funcNo != -999999 {
		reflectFunc, ok := HandleFuncMap[funcNo]
		if ok {  
			reflectFunc.Call(inputs)	
		}else{
			fmt.Printf("Please register handle function first.[FuncID: %d]\n", funcNo)
		}
	} else {
		fmt.Printf("PUSH MESSAGE\n")
		dat := ret.DataSet
		if C.GoString(ret.MsgType) == "g" {
			pushdata := (*C.struct_DealPushResp)(dat)
			fmt.Printf("%+v\n", *pushdata)
		} else {
			pushdata := (*C.struct_EntrustPushResp)(dat)
			fmt.Printf("%+v\n", *pushdata)
		}
	}
}
