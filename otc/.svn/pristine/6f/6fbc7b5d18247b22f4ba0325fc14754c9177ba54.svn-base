package main

import (
	"github.com/Workiva/go-datastructures/queue"
	log "github.com/thinkboy/log4go"
	emsbase "quant/emsmodule/base"
	"time"
)

type AlgorithmAdmin struct {
	Portqueue *queue.RingBuffer
}

// Run will be called by emsmodule.
func (admin *AlgorithmAdmin) Run() {
	for {
		if admin.Portqueue.Len() > 0 {
			for {
				port, err := admin.Portqueue.Get()
				if err == nil {
					p := port.(emsbase.Portfolio)
					for _, e := range p.SecurityEntrusts {
						if e.Algorithm == "" {
							itrade, ok := adaptersMap[p.AdapterName]
							if ok {
								itrade.LimitEntrust(e, p.AccountID, p.CombiNo)
							} else {
								log.Error("AlgorithmAdmin can't find \"%s\" trade adapter.", p.AdapterName)
							}
						}
					}
				}
			}
		} else {
			time.Sleep(time.Millisecond)
		}
	}
}
